using System;
using System.Runtime.InteropServices;
using System.Text;
using System.Windows.Forms;

namespace Stub.Help.Modules
{
    public static class USBWatcher
    {
        public const int WM_DEVICECHANGE = 0x0219;
        public const int DBT_DEVICEARRIVAL = 0x8000;

        [StructLayout(LayoutKind.Sequential)]
        public struct DEV_BROADCAST_VOLUME
        {
            public int dbcv_size;
            public int dbcv_devicetype;
            public int dbcv_reserved;
            public int dbcv_unitmask;
        }

        [DllImport("user32.dll", CharSet = CharSet.Auto, SetLastError = true)]
        public static extern IntPtr RegisterDeviceNotification(IntPtr hRecipient, ref DEV_BROADCAST_VOLUME NotificationFilter, int Flags);

        [DllImport("user32.dll", CharSet = CharSet.Auto, SetLastError = true)]
        public static extern bool UnregisterDeviceNotification(IntPtr Handle);

        public static void WatchUSB()
        {
            DEV_BROADCAST_VOLUME volumeDevice = new DEV_BROADCAST_VOLUME();
            volumeDevice.dbcv_size = Marshal.SizeOf(volumeDevice);
            volumeDevice.dbcv_devicetype = 0x00000002; // DBT_DEVTYP_VOLUME

            IntPtr notificationHandle = RegisterDeviceNotification(IntPtr.Zero, ref volumeDevice, 0);

            if (notificationHandle == IntPtr.Zero)
            {
                throw new Exception("Failed to register for USB device notifications.");
            }

            try
            {
                while (true)
                {
                    System.Windows.Forms.Application.DoEvents(); // Обработка сообщений
                }
            }
            finally
            {
                UnregisterDeviceNotification(notificationHandle);
            }
        }

        

        public static string GetDriveLetterFromMask(int unitmask)
        {
            for (int i = 0; i < 26; i++)
            {
                if ((unitmask & (1 << i)) != 0)
                {
                    char driveLetter = (char)('A' + i);
                    return driveLetter + ":\\";
                }
            }
            return null;
        }
    }
}
